#[derive(Clone, Debug, PartialEq)]
pub struct {{ name }}(String);

impl AsRef<str> for {{ name }} {
    fn as_ref(&self) -> &str {
        self.0.as_ref()
    }
}

impl<'t, 's> TypedNode<'t, 's> for {{ name }} {
    fn from_node(node: Node<'t>, source: &'s [u8]) -> Self
    where
        Self: Sized {
        Self(
            node.utf8_text(source)
                .expect("Could not convert string value from node for {{ name }}.")
                .to_string()
        )
    }
}
